# Multi-stage build for GraalVM native image

# Build stage with GraalVM
FROM ghcr.io/graalvm/native-image-community:24-ol9 AS builder

# Install required build tools
RUN microdnf install -y findutils

WORKDIR /app

# Copy Gradle wrapper and configuration files
COPY gradlew ./
COPY gradle ./gradle
COPY build.gradle.kts settings.gradle.kts gradle.properties ./

# Make gradlew executable
RUN chmod +x ./gradlew

# Download dependencies (this layer will be cached if dependencies don't change)
RUN ./gradlew dependencies --no-daemon || true

# Copy source code
COPY src ./src

# Build native image using Gradle GraalVM plugin
RUN ./gradlew nativeCompile --no-daemon

# Runtime stage - use minimal alpine image
FROM alpine:latest

WORKDIR /app

# Install required runtime libraries for GraalVM native images
RUN apk add --no-cache libstdc++ gcompat

# Create a non-root user for security
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Copy the native executable from builder stage
COPY --from=builder /app/build/native/nativeCompile/csak ./csak

# Make it executable
RUN chmod +x ./csak

# Change ownership to non-root user
RUN chown appuser:appgroup /app/csak

# Switch to non-root user
USER appuser

# Set the entrypoint
ENTRYPOINT ["/app/csak"]

# Default command (can be overridden)
CMD ["--help"]

# Metadata
LABEL maintainer="Cardano Swiss Army Knife"
LABEL version="0.1.0"
LABEL description="Cardano Swiss Army Knife - GraalVM Native Image"
